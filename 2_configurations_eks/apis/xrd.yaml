# configurations-eks/apis/xrd.yaml
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xclusters.segoja7.example
spec:
  group: segoja7.example
  names:
    kind: XCLUSTER
    plural: xclusters
  versions:
  - name: v1alpha1
    served: true
    referenceable: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              id:
                type: string
                description: "ID único para este cluster y sus recursos."
              region:
                type: string
                description: "Región de AWS para el cluster."
              providerConfigName:
                type: string
                description: "Nombre del ProviderConfig a usar."
                default: "default"
              tags:
                type: object
                description: A map of tags to apply to all resources.
                additionalProperties:
                  type: string
              encryptCluster:
                type: boolean
                description: A boolean flag to enable/disable kms encrypt in eks cluster
                default: false
              accountId: 
                type: string
                description: Accountid of the account
              authenticationMode:
                type: string
                description: "Authentication mode for the EKS cluster. Valid values are 'API,' 'CONFIG_MAP' and 'API_AND_CONFIG_MAP'."
                default: "API_AND_CONFIG_MAP"
              logging:
                type: array
                description: "List of log types to enable for the cluster. Valid values are 'api', 'audit', 'authenticator', 'controllerManager', and 'scheduler'."
                items:
                  type: string
              endpointPublicAccess:
                type: boolean
                description: "Enable public access to API server endpoint"
                default: true
              endpointPrivateAccess:
                type: boolean
                description: "Enable private access to API server endpoint."
                default: true
              publicAccessCidrs:
                type: array
                description: "List of CIDR blocks to allow access to the public API server endpoint."
                items:
                  type: string
                default: ["0.0.0.0/0"]
              networkId:
                type: string
                description: "ID of the network where the cluster will be deployed."
              clusterVersion:
                type: string
                description: "Kubernetes version for the cluster."
              nodeGroup:
                  type: object
                  properties:
                    amiType:
                      type: string
                      description: "AMI type for the cluster. Valid values are 'AL2_x86_64', 'AL2_x86_64_GPU', 'BOTTLEROCKET_ARM_64', and 'BOTTLEROCKET_x86_64'."
                      #default: "AL2_x86_64"
                    diskSize:
                      type: integer
                      description: "Disk size in GiB for the cluster nodes."
                      default: 20
                    instanceTypes:
                      type: array
                      description: "List of instance types for the cluster nodes."
                      items:
                        type: string
                      default: ["t3.medium"]
                    minSize:
                      type: integer
                      default: 1
                    maxSize:
                      type: integer
                      default: 3 # Aumentado para permitir escalado
                    desiredSize:
                      type: integer
                      default: 2
                    capacityType:
                      type: string
                      description: "Capacity type for the cluster nodes. Valid values are 'ON_DEMAND' and 'SPOT'."
                      default: "ON_DEMAND"
                    updateConfig:
                      type: object
                      properties:
                        maxUnavailablePercentage:
                          type: integer
                          description: "Maximum percentage of nodes that can be unavailable during an update."
                        force:
                          type: boolean
                          description: "Force update even if it causes disruption."
                          default: false
                        maxUnavailable:
                          type: integer
                          description: "Maximum number of nodes that can be unavailable during an update."
                      not:
                        required:
                          - maxUnavailable
                          - maxUnavailablePercentage
              addons:
                type: array
                description: "List of EKS addons to install on the cluster."
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: "The addon name (ej. vpc-cni, coredns, kube-proxy)."
                    version:
                      type: string
                      description: "The addon version. If not specified, the latest version is used."
                    resolveConflicts:
                      type: string
                      description: "How to resolve version conflicts for the addon. Valid values are 'NONE', 'OVERWRITE', and 'PRESERVE'."
                      enum: ["NONE", "OVERWRITE", "PRESERVE"]
              helmAddonsConfig:
                type: array
                description: "Create IAM service accounts and install Helm charts on the cluster."
                items:
                  type: object
                  properties:
                    # Helm Release
                    name:
                      type: string
                      description: "Name of the Helm release."
                    chart:
                      type: string
                      description: "The name of the chart to install."
                    repository:
                      type: string
                      description: "The URL of the repository where the chart is located."
                    version:
                      type: string
                      description: "The version of the chart to install."
                    namespace:
                      type: string
                      description: "The Kubernetes namespace to install the chart into."
                    createNamespace:
                      type: boolean
                      description: "Whether to create the namespace if it does not exist."
                      default: true
                    values:
                      type: object
                      description: "Object containing the values to set for the chart."
                      x-kubernetes-preserve-unknown-fields: true
                    # Service Account e IAM
                    serviceAccountName:
                      type: string
                      description: "Name of the service account to create for IRSA."
                    customPolicy:
                      type: string
                      description: "JSON formatted IAM policy for the service account."
                  anyOf:
                    - not:
                        required: ["serviceAccountName"]
                    - required: ["serviceAccountName", "customPolicy"]
              hostedZoneID:
                type: string
                default: Z084056021QR5BJUSPGN7
              domainNames:
                type: array
                description: List of domain names for SSL certificates
                items:
                  type: string
              certificateSecretName:
                type: string
                description: Name of the Kubernetes secret for SSL certificates
                default: ssl-cert-default
              enableArgo:
                type: boolean
                description: Enable ArgoCD.
                default: false
              clusterTopology:
                type: object
                properties:
                  typeCluster:
                    type: string
                    description: "The role of the cluster. Don't create a spoke cluster if before you don't create a hub cluster"
                    enum: ["Hub", "Spoke", "Standalone"]
                  hubId:
                    type: string    
                    description: "ID of the Hub cluster claim. Required only when the type is 'Spoke'."        
                required: [typeCluster]
                allOf:
                  - if:
                      properties:
                        typeCluster:
                          const: "Spoke"
                    then:
                      required:
                        - hubId
                    else:
                      properties:
                        hubId:
                          not: {}
            required: ["id", "region", "accountId", "networkId", "hostedZoneID", "domainNames", "certificateSecretName"]


